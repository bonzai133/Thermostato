const temperatureRefreshTime=10000;var temperature;var unit;var tempContainer;var mode;var pump;var formConfig;window.addEventListener('load',onLoad);function onLoad(event){initTime();initHomeStatus();initConfigForm();initAdvancedConfigForm();}
function initTime(){time=document.getElementById('time');if(time!==null){updateTime();setInterval(updateTime,1000);}}
async function initConfigForm(){formConfig=document.getElementById('config-form');if(formConfig){const response=await fetch('/api/config');const data=await response.json();formConfig.elements['mode-select'].value=data.mode;formConfig.elements.Confort.value=data.confort;formConfig.elements.Deltac.value=data.deltaConfort;formConfig.elements.Eco.value=data.eco;formConfig.elements.Deltae.value=data.deltaEco;formConfig.elements.HorsGel.value=data.horsGel;formConfig.elements.Deltah.value=data.deltaHorsGel;formConfig.addEventListener('submit',async(event)=>{event.preventDefault();const mode=formConfig.elements['mode-select'].value;const confort=Number(formConfig.elements.Confort.value);const deltaConfort=Number(formConfig.elements.Deltac.value);const eco=Number(formConfig.elements.Eco.value);const deltaEco=Number(formConfig.elements.Deltae.value);const horsGel=Number(formConfig.elements.HorsGel.value);const deltaHorsGel=Number(formConfig.elements.Deltah.value);const data={mode:mode,confort:confort,deltaConfort:deltaConfort,eco:eco,deltaEco:deltaEco,horsGel:horsGel,deltaHorsGel:deltaHorsGel};try{const response=await fetch('/api/config',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(data)});if(!response.ok){throw new Error('Failed to save form data');}
alert('Form data saved successfully!');}catch(error){console.error(error);alert('An error occurred while saving the form data');}});}}
async function initAdvancedConfigForm(){formAdvancedConfig=document.getElementById('advanced-form');if(formAdvancedConfig){const response=await fetch('/api/advancedConfig');const data=await response.json();for(let key in data){if(data.hasOwnProperty(key)){const input=formAdvancedConfig.elements[key];if(input){input.value=data[key];}}}
formAdvancedConfig.addEventListener('submit',async(event)=>{event.preventDefault();const formData=new FormData(formAdvancedConfig);const data={};for(let[key,value]of formData.entries()){data[key]=value;}
try{const response=await fetch('/api/advancedConfig',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(data)});if(!response.ok){throw new Error('Failed to save form data');}
alert('Form data saved successfully!');}catch(error){console.error(error);alert('An error occurred while saving the form data');}});}}
function updateTime(){let now=new Date();let h=now.getHours();let m=now.getMinutes();let s=now.getSeconds();time.innerHTML=`${normalize(h)}:${normalize(m)}:${normalize(s)}`;}
function normalize(digit){return(digit<10?'0':'')+digit;}
function initHomeStatus(){if(document.getElementById('home-status')){temperature=document.getElementById('temperature');unit=document.getElementById('unit');tempContainer=document.getElementById('tempContainer');mode=document.getElementById('mode');pump=document.getElementById('pump');setTemperature("-");getHomeStatus();setInterval(getHomeStatus,temperatureRefreshTime);}}
function getHomeStatus(){asyncAwaitRequest('/api/homeStatus/',(rspDoc)=>{setTemperature(rspDoc.temperature);mode.innerText=rspDoc.mode;pump.innerText=rspDoc.pump;});}
function setTemperature(temp){if(temp=='Error'||temp=='-'){temperature.innerText=temp;unit.style.display='none';if(!tempContainer.classList.contains('error')){tempContainer.classList.add('error');}}else{let t=Number.parseFloat(temp).toFixed(1);temperature.innerText=t;unit.style.display='inline';if(tempContainer.classList.contains('error')){tempContainer.classList.remove('error');}
}}
function asyncAwaitRequest(path,callback){(async()=>{let data="Error";try{let response=await fetch(path);data=await response.json();}catch(err){data="Error";}
typeof callback==='function'&&callback(data);})();}